name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          # regular builds:
          - ARCH: x86_64
            BUILD_TYPE: appimage
            RUNS_ON: ubuntu-24.04
          - ARCH: i386
            BUILD_TYPE: appimage
            RUNS_ON: ubuntu-24.04
          - ARCH: aarch64
            BUILD_TYPE: appimage
            RUNS_ON: ubuntu-24.04-arm
          - ARCH: armhf
            BUILD_TYPE: appimage
            RUNS_ON: ubuntu-24.04-arm

          # test build
          - ARCH: x86_64
            BUILD_TYPE: coverage
            RUNS_ON: ubuntu-24.04

      fail-fast: false

    name: ${{ matrix.ARCH }} ${{ matrix.BUILD_TYPE }}
    runs-on: ${{ matrix.RUNS_ON }}

    env:
      ARCH: ${{ matrix.ARCH }}
      BUILD_TYPE: ${{ matrix.BUILD_TYPE }}
      DEBIAN_FRONTEND: interactive

    steps:
      # check out once git command is available
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build and test AppImage
        run: bash ci/build-in-docker.sh

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AppImage ${{ matrix.ARCH }}${{ matrix.BUILD_TYPE }}
          path: linuxdeploy-plugin-qt-${{ matrix.ARCH }}.AppImage*

  upload:
    name: Create release and upload artifacts
    needs:
      - build-and-test
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/linuxdeploy*.AppImage*
